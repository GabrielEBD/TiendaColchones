/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package javaapplication7;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import java.sql.*;
import java.awt.*;
import javax.swing.*;
import java. *;
import java.util.*;
/**
 *
 * @author usuario
 */
public class admAlmacen extends javax.swing.JFrame {

    /**
     * Creates new form admAlmacen
     */
    public admAlmacen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setLabel("PRODUCTOS");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setLabel("FIN CONTRATO");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setLabel("TELEFONOS");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setLabel("VENTAS");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setLabel("TIPOS DE PRODUCTOS");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setLabel("BORRAR FACTURA");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setLabel("BORRAR CLIENTE");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setLabel("NUEVO PRODUCTO");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setLabel("BORRAR PRECIO");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setLabel("ACTUALIZAR PRECIO");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setLabel("ACTUALIZAR NOMBRE");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setLabel("ACTUALIZAR TIPO ");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setLabel("ACTULIZAR MARCA");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setLabel("BORRAR FACTURA");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setLabel("BORRAR DE FACTURA");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton16.setLabel("PRECIO POR FECHA");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton19.setLabel("SALIR");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton10)
                            .addComponent(jButton9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jButton19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton11)
                            .addComponent(jButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton12)
                            .addComponent(jButton3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton13)
                            .addComponent(jButton4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton14)
                            .addComponent(jButton5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton15)
                            .addComponent(jButton6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton16)
                            .addComponent(jButton7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton8)
                            .addComponent(jButton9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton19)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // VISTA 1
        try{
         Statement cmd = conexion.conexion.createStatement();
         ResultSet rcmd = cmd.executeQuery ("select * from invpro_cant_fecha");
         String datos = "";
         while (rcmd.next())
         {
             datos = datos +" CANTIDAD:"+ rcmd.getInt("invP_cantidadIngreso")+
                     " FECHA: "+ rcmd.getDate("invP_fecha") +
                     " nombre: "+ rcmd.getString("pro_nombre") +
                     "\n"; 
         } 
          jTextArea1.setText(datos);
       }catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Imposible cargar vista ...Error.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // VISTA 2
        try{
         Statement cmd = conexion.conexion.createStatement();
         ResultSet rcmd = cmd.executeQuery ("select * from ini_fin_contrato");
         String datos = "";
         while (rcmd.next())
         {
             datos = datos +
                     " FECHA FIN: "+ rcmd.getDate("con_fechaFin") +
                     "  NOMBRE EMPLEADO: "+ rcmd.getString("emp_nombreApellido") +
                     "\n"; 
         } 
          jTextArea1.setText(datos);
       }catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Imposible cargar vista ...Error.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // VISTA 3
        try{
         Statement cmd = conexion.conexion.createStatement();
         ResultSet rcmd = cmd.executeQuery ("select * from nom_tl_EmpAL;");
         String datos = "";
         while (rcmd.next())
         {
             datos = datos + "  NOMBRE EMPLEADO:"+ rcmd.getString("emp_nombreApellido")+
                     " TELEFONO: "+ rcmd.getInt("tel_numero") +
                     "\n"; 
         } 
          jTextArea1.setText(datos);
       }catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Imposible cargar vista ...Error.", "Error", JOptionPane.ERROR_MESSAGE);
       System.out.println(ex);
       }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
         // VISTA 4
        try{
         Statement cmd = conexion.conexion.createStatement();
         ResultSet rcmd = cmd.executeQuery ("select * from ventas_vende;");
         String datos = "";
         while (rcmd.next())
         {
             datos = datos +"  NOMBRE EMPLEADO:"+ rcmd.getString("emp_nombreApellido")+
                     " TOTAL VENDIDO: "+ rcmd.getInt("sum(com_cantidad)") +
                     "\n"; 
         } 
          jTextArea1.setText(datos);
       }catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Imposible cargar vista ...Error.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // VISTA 5
        try{
         Statement cmd = conexion.conexion.createStatement();
         ResultSet rcmd = cmd.executeQuery ("select * from prod_mede;");
         String datos = "";
         while (rcmd.next())
         {
             datos = datos +"  TIPO PRODUCTO :"+ rcmd.getString("pro_tipo")+
                     " TOTAL : "+ rcmd.getInt("count(pro_nombre)") +
                     "\n"; 
         } 
          jTextArea1.setText(datos);
       }catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Imposible cargar vista ...Error.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // PROCEDIMIENTO 1
         try {        
           
            String idfactura = JOptionPane.showInputDialog(null, "Por favor digite el numero de factura que desea borrar", null, WIDTH);
            int idFac = Integer.parseInt(idfactura);
            CallableStatement cmd = conexion.conexion.prepareCall("{call borrar_factura (?)}");
            cmd.setInt(1,idFac);
            System.out.println(idFac);
            cmd.execute();
            System.out.println(idFac);
            cmd.close();
            String datos = "se ha borrado correctamente la factura ";
            jTextArea1.setText(datos);
        } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Imposible cargar valor ...Error.", "Error", JOptionPane.ERROR_MESSAGE);
        System.out.println(ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // PROCEDIMIENTO 2
         try {        
         
            String idfactura = JOptionPane.showInputDialog(null, "Por favor digite la identificacion del cliente que desea borrar", null, WIDTH);
            int idFac = Integer.parseInt(idfactura);
            CallableStatement cmd = conexion.conexion.prepareCall("{call borrar_cliente (?)}");
            cmd.setInt(1,idFac);
            System.out.println(idFac);
            cmd.execute();
            System.out.println(idFac);
            cmd.close();
            String datos = "se ha borrado correctamente el cliente ";
            jTextArea1.setText(datos);
        } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Imposible cargar valor ...Error.", "Error", JOptionPane.ERROR_MESSAGE);
        System.out.println(ex);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        try {        
          // procedimiento 3
            String idproducto = JOptionPane.showInputDialog(null, "Por favor ingrese el id del producto", null, WIDTH);
            String nombre = JOptionPane.showInputDialog(null, "Por favor ingrese el nombre del producto", null, WIDTH);
            String tipo = JOptionPane.showInputDialog(null, "Por favor ingrese el tipo de producto", null, WIDTH);
            String marca = JOptionPane.showInputDialog(null, "Por favor la marca del producto", null, WIDTH);
            String cantidad = JOptionPane.showInputDialog(null, "Por favor ingrese la antidad inicial de exixtencias del producto", null, WIDTH);
            int idPro = Integer.parseInt(idproducto);
            int Cant = Integer.parseInt(cantidad);
            CallableStatement cmd = conexion.conexion.prepareCall("{call incertar_producto (?,?,?,?,?)}");
            cmd.setInt(1,idPro);
            cmd.setString(2,nombre);
            cmd.setString(3,tipo);
            cmd.setString(4,marca);
            cmd.setInt(5,Cant);
            cmd.execute();
            cmd.close();
            String datos = "se ha ingresado correctamente el producto ";
            jTextArea1.setText(datos);
        } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Imposible guardar valor ...Error.", "Error", JOptionPane.ERROR_MESSAGE);
        System.out.println(ex);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        try {        
          // procedimiento 4
            String id = JOptionPane.showInputDialog(null, "Por favor ingrese el id del producto", null, WIDTH);
            String precio = JOptionPane.showInputDialog(null, "Por favor ingrese el nuevo precio del producto", null, WIDTH);
            int idPro = Integer.parseInt(id);
            int Cant = Integer.parseInt(precio);
            CallableStatement cmd = conexion.conexion.prepareCall("{call incertar_precio (?,?)}");
            cmd.setInt(1,idPro);
            cmd.setInt(2,Cant);
            cmd.execute();
            cmd.close();
            String datos = "se ha ingresado correctamente el precio ";
            jTextArea1.setText(datos);
        } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Imposible guardar valor ...Error.", "Error", JOptionPane.ERROR_MESSAGE);
        System.out.println(ex);
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        try {        
          // procedimiento 5
            String id = JOptionPane.showInputDialog(null, "Por favor ingrese el id del producto", null, WIDTH);
            String precio = JOptionPane.showInputDialog(null, "Por favor ingrese el nuevo nombre del producto", null, WIDTH);
            int idPro = Integer.parseInt(id);
            CallableStatement cmd = conexion.conexion.prepareCall("{call actualizar_nombre_producto (?,?)}");
            cmd.setInt(1,idPro);
            cmd.setString(2,precio);
            cmd.execute();
            cmd.close();
            String datos = "se ha ingresado correctamente el nuevo nombre ";
            jTextArea1.setText(datos);
        } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Imposible guardar valor ...Error.", "Error", JOptionPane.ERROR_MESSAGE);
        System.out.println(ex);
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        try {        
          // procedimiento 6
            String id = JOptionPane.showInputDialog(null, "Por favor ingrese el id del producto", null, WIDTH);
            String precio = JOptionPane.showInputDialog(null, "Por favor ingrese el nuevo tipo del producto", null, WIDTH);
            int idPro = Integer.parseInt(id);
            CallableStatement cmd = conexion.conexion.prepareCall("{call actualizar_tipo_producto (?,?)}");
            cmd.setInt(1,idPro);
            cmd.setString(2,precio);
            cmd.execute();
            cmd.close();
            String datos = "se ha ingresado correctamente el nuevo nombre ";
            jTextArea1.setText(datos);
        } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Imposible guardar valor ...Error.", "Error", JOptionPane.ERROR_MESSAGE);
        System.out.println(ex);
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        try {        
          // procedimiento 7
            String id = JOptionPane.showInputDialog(null, "Por favor ingrese el id del producto", null, WIDTH);
            String precio = JOptionPane.showInputDialog(null, "Por favor ingrese la nueva marca del producto", null, WIDTH);
            int idPro = Integer.parseInt(id);
            CallableStatement cmd = conexion.conexion.prepareCall("{call actualizar_marca_producto (?,?)}");
            cmd.setInt(1,idPro);
            cmd.setString(2,precio);
            cmd.execute();
            cmd.close();
            String datos = "se ha ingresado correctamente el nuevo nombre ";
            jTextArea1.setText(datos);
        } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Imposible guardar valor ...Error.", "Error", JOptionPane.ERROR_MESSAGE);
        System.out.println(ex);
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        try {        
          // procedimiento 8
            String id = JOptionPane.showInputDialog(null, "Por favor ingrese el id de la factura", null, WIDTH);
            int idPro = Integer.parseInt(id);
            CallableStatement cmd = conexion.conexion.prepareCall("{call borrar_comprado (?)}");
            cmd.setInt(1,idPro);
            cmd.execute();
            cmd.close();
            String datos = "se ha borrado correctamente el contenido del la factura ";
            jTextArea1.setText(datos);
        } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Imposible ejecutar accion ...Error.", "Error", JOptionPane.ERROR_MESSAGE);
        System.out.println(ex);
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        try {        
          // procedimiento 9
            String idfactura = JOptionPane.showInputDialog(null, "Por favor ingrese el id de la factura", null, WIDTH);
            String idproducto = JOptionPane.showInputDialog(null, "Por favor ingrese el id del producto", null, WIDTH);
            int idFac = Integer.parseInt(idfactura);
            int idPro = Integer.parseInt(idproducto);
            CallableStatement cmd = conexion.conexion.prepareCall("{call borrar_comprado_poruno (?,?)}");
            cmd.setInt(1,idFac);
            cmd.setInt(2,idPro);
            cmd.execute();
            cmd.close();
            String datos = "se ha borrado correctamente el contenido del la factura ";
            jTextArea1.setText(datos);
        } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Imposible ejecutar accion ...Error.", "Error", JOptionPane.ERROR_MESSAGE);
        System.out.println(ex);
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        try {        
          // procedimiento 10
            String idfactura = JOptionPane.showInputDialog(null, "Por favor ingrese el id del producto", null, WIDTH);
            String idproducto = JOptionPane.showInputDialog(null, "Por favor ingrese la fecha AAAA-MM-DD ", null, WIDTH);
            int idFac = Integer.parseInt(idfactura);
            
            CallableStatement cmd = conexion.conexion.prepareCall("{call  borrar_precio (?,?)}");
            cmd.setInt(1,idFac);
            cmd.setString(2,idproducto);
            cmd.execute();
            cmd.close();
            String datos = "se ha borrado correctamente el precio ";
            jTextArea1.setText(datos);
        } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Imposible ejecutar accion ...Error.", "Error", JOptionPane.ERROR_MESSAGE);
        System.out.println(ex);
        }
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        try {        
          // procedimiento 11
            String idfactura = JOptionPane.showInputDialog(null, "Por favor ingrese el id del producto", null, WIDTH);
            int idFac = Integer.parseInt(idfactura);
            CallableStatement cmd = conexion.conexion.prepareCall("{call  borrar_precio_producto (?)}");
            cmd.setInt(1,idFac);
            cmd.execute();
            cmd.close();
            String datos = "se ha borrado correctamente el contenido precio del producto ";
            jTextArea1.setText(datos);
        } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Imposible ejecutar accion ...Error.", "Error", JOptionPane.ERROR_MESSAGE);
        System.out.println(ex);
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
         try {
        conexion.conexion.close();
        JOptionPane.showMessageDialog(null, "Cerrar conexión a base de datos "+conexion.server+" exitosa.", "Conexión cerrada", JOptionPane.INFORMATION_MESSAGE);
        System.exit(0);
        super.setVisible(false);        
        } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Imposible cerrar conexion con "+conexion.server+"...Error.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton19ActionPerformed

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(admAlmacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(admAlmacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(admAlmacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(admAlmacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new admAlmacen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
