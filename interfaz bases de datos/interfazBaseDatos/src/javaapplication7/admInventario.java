/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package javaapplication7;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import java.sql.*;
import java.awt.*;
import javax.swing.*;
import java. *;
import java.util.*;

/**
 *
 * @author usuario
 */
public class admInventario extends javax.swing.JFrame {

    /**
     * Creates new form admInventario
     */
    public admInventario() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setLabel("MATERIALES");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setLabel("INGRESOS PRODUCTOS");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setLabel("MENOR PROVEEDOR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setLabel("VENDIDOS POR MES");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setLabel("PROVEEDORES");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setLabel("PRODUCTO PROVEEDOR");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setLabel("SALIDA");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton10.setLabel("BORRAR INV POR PRO");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setLabel("INGRESAR MAT");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setLabel("ELIMINAR INV.");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton14.setText("jButton1");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jButton11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jButton12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4)
                            .addComponent(jButton6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton5)
                            .addComponent(jButton7))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // VISTA 1 
        try{
         Statement cmd = conexion.conexion.createStatement();
         ResultSet rcmd = cmd.executeQuery ("select * from administrador_de_inventario1");
         String datos = "";
         while (rcmd.next())
         {
             datos = datos +" NOMBRE:"+ rcmd.getString("invM_nombre")+
                     " CANTIDAD: "+ rcmd.getInt("invN_cantidad") +
                     "\n"; 
         } 
          jTextArea1.setText(datos);
       }catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Imposible cargar vista ...Error.", "Error", JOptionPane.ERROR_MESSAGE);
        System.out.println(ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // VISTA 2 
        try{
         Statement cmd = conexion.conexion.createStatement();
         ResultSet rcmd = cmd.executeQuery ("select * from administrador_de_inventario2");
         String datos = "";
         while (rcmd.next())
         {
             datos = datos +" CANTIDAD INGRESO:"+ rcmd.getInt("invP_cantidadIngreso")+
                     " ID DE INVENTARIO PRODUCTO: "+ rcmd.getInt("invP_id") +
                     "\n"; 
         } 
          jTextArea1.setText(datos);
       }catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Imposible cargar vista ...Error.", "Error", JOptionPane.ERROR_MESSAGE);
        System.out.println(ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        //VISTA 4
        try{
         Statement cmd = conexion.conexion.createStatement();
         ResultSet rcmd = cmd.executeQuery ("select * from basecamasVendidosPrimerMes1");
         String datos = "";
         while (rcmd.next())
         {
             datos = datos +" CANTIDAD TOTAL:"+ rcmd.getInt("count(com_cantidad)")+
                     " NOMBRE: "+ rcmd.getString("pro_nombre") +
                     " FECHA: "+ rcmd.getDate("com_fecha") +
                     "\n"; 
         } 
          jTextArea1.setText(datos);
       }catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Imposible cargar vista ...Error.", "Error", JOptionPane.ERROR_MESSAGE);
        System.out.println(ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // VISTA 3 
        try{
         Statement cmd = conexion.conexion.createStatement();
         ResultSet rcmd = cmd.executeQuery ("select * from productosVendidos_menorproveedor3");
         String datos = "";
         while (rcmd.next())
         {
             datos = datos +" CANTIDAD INGRESO:"+ rcmd.getInt("count(invP_cantidadIngreso)")+
                     " IS INVENTARIO PRODUCTO: "+ rcmd.getDate("invP_fecha") +
                     " CANTIDAD: "+ rcmd.getString("prov_nombre") +
                     "\n"; 
         } 
          jTextArea1.setText(datos);
       }catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Imposible cargar vista ...Error.", "Error", JOptionPane.ERROR_MESSAGE);
        System.out.println(ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        //VISTA 5
        try{
         Statement cmd = conexion.conexion.createStatement();
         ResultSet rcmd = cmd.executeQuery ("select * from prov_tipo");
         String datos = "";
         while (rcmd.next())
         {
             datos = datos +" CANTIDAD TOTAL:"+ rcmd.getString("prov_nombre")+
                     " NOMBRE: "+ rcmd.getString("prov_tipo") +
                     "\n"; 
         } 
          jTextArea1.setText(datos);
       }catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Imposible cargar vista ...Error.", "Error", JOptionPane.ERROR_MESSAGE);
        System.out.println(ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
       try {
        conexion.conexion.close();
        JOptionPane.showMessageDialog(null, "Cerrar conexión a base de datos "+conexion.server+" exitosa.", "Conexión cerrada", JOptionPane.INFORMATION_MESSAGE);
        System.exit(0);
        super.setVisible(false);        
        } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Imposible cerrar conexion con "+conexion.server+"...Error.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // PROCEDIMIENTO 1 
         try {        
           
            String idinventarioP = JOptionPane.showInputDialog(null, "Por favor digite el nuevo di del inventario producto", null, WIDTH);
            String idproveedor = JOptionPane.showInputDialog(null, "Por favor digite el id del proveedor", null, WIDTH);
            String idproducto = JOptionPane.showInputDialog(null, "Por favor digite el id del producto", null, WIDTH);
            String cantidad = JOptionPane.showInputDialog(null, "Por favor digite la cantidad que desea registrar", null, WIDTH);
            
            int idInvPro = Integer.parseInt(idinventarioP);
            int idProv = Integer.parseInt(idproveedor);
            int idPro = Integer.parseInt(idproducto);
            int Cant = Integer.parseInt(cantidad);
            
            CallableStatement cmd = conexion.conexion.prepareCall("{call ingreso_producto_proveedor (?,?,?,?)}");
            cmd.setInt(1,idInvPro);
            cmd.setInt(2,idProv);
            cmd.setInt(3,idPro);
            cmd.setInt(4,Cant);
            System.out.println(idInvPro);
            cmd.execute();
            System.out.println(idInvPro);
            cmd.close();
            String datos = "el procedimiento se ha ejecutado correcctamente ";
            jTextArea1.setText(datos);
        } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Imposible cargar valor ...Error.", "Error", JOptionPane.ERROR_MESSAGE);
        System.out.println(ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // PROCEDIMIENTO 2 
         try {        
           
            String idinventarioP = JOptionPane.showInputDialog(null, "Por favor digite el id de inventario producto", null, WIDTH);
            String idproveedor = JOptionPane.showInputDialog(null, "Por favor digite la forma de ingreso del producto", null, WIDTH);
            int Cant = Integer.parseInt(idinventarioP);
            CallableStatement cmd = conexion.conexion.prepareCall("{call eliminar_inventario_id_producto (?,?)}");
            cmd.setInt(1,Cant);
            cmd.setString(2,idproveedor);
            System.out.println(Cant);
            cmd.execute();
            System.out.println(Cant);
            cmd.close();
            String datos = "el procedimiento se ha ejecutado correcctamente ";
            jTextArea1.setText(datos);
        } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Imposible cargar valor ...Error.", "Error", JOptionPane.ERROR_MESSAGE);
        System.out.println(ex);
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // PROCEDIMIENTO 3
         try {        
           
            String idprov = JOptionPane.showInputDialog(null, "Por favor digite el id del proveedor", null, WIDTH);
            String idmat = JOptionPane.showInputDialog(null, "Por favor digite id del material", null, WIDTH);
            String cant = JOptionPane.showInputDialog(null, "Por favor digite la cantidad a ingresar", null, WIDTH);
            
            int idProv = Integer.parseInt(idprov);
            int idMat = Integer.parseInt(idmat);
            int Cant = Integer.parseInt(cant);
            CallableStatement cmd = conexion.conexion.prepareCall("{call ingreso_material_proveedor (?,?,?)}");
            cmd.setInt(1,idProv);
            cmd.setInt(2,idMat);
            cmd.setInt(3,Cant);
            System.out.println(Cant);
            cmd.execute();
            System.out.println(Cant);
            cmd.close();
            String datos = "el procedimiento se ha ejecutado correcctamente ";
            jTextArea1.setText(datos);
        } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Imposible cargar valor ...Error.", "Error", JOptionPane.ERROR_MESSAGE);
        System.out.println(ex);
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // PROCEDIMIENTO 4
         try {        
           
            String fecha = JOptionPane.showInputDialog(null, "Por favor digite la fecha AAAA-MM-DD", null, WIDTH);
            String provid = JOptionPane.showInputDialog(null, "Por favor digte le id del proveedor", null, WIDTH);
            String matid = JOptionPane.showInputDialog(null, "Por favor digite el id del matarial", null, WIDTH);
            
            int idProv = Integer.parseInt(provid);
            int idMat = Integer.parseInt(matid);
           
            CallableStatement cmd = conexion.conexion.prepareCall("{call eliminar_registro_inventario_menos_inventario (?,?,?)}");
            cmd.setString(1,fecha);
            cmd.setInt(2,idProv);
            cmd.setInt(3,idMat);
            System.out.println(idMat);
            cmd.execute();
            System.out.println(idMat);
            cmd.close();
            String datos = "el procedimiento se ha ejecutado correcctamente ";
            jTextArea1.setText(datos);
        } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Imposible cargar valor ...Error.", "Error", JOptionPane.ERROR_MESSAGE);
        System.out.println(ex);
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(admInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(admInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(admInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(admInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new admInventario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
